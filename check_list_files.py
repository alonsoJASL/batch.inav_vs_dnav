import argparse

nav = lambda x: x+'Nav' # function to add Nav to the end of the string

def main(args) : 
    
    KNOWN_ISSUES = {'iNav': ['2022091601', '2022072202', '2021110501', '2021102901', '2021091001',
                       '2021081301', '2021070902', '2021062501', '2021061101', '2021052102',
                       '2021051401', '2021032601', '2020110601', '2020112701', '2021120301'],
              'dNav': ['2022071502', '2022070102', '2022041301', '2022032501', '2022030401',
                       '2021121701', '2021101501', '2021100802', '2021092401', '2021091001',
                       '2021082701', '2021070902', '2021070901', '2021070202', '2021062501',
                       '2021061101', '2021052101', '2021051401', '2021041601', '2021032601',
                       '2021031902', '2020112701', '2021041601']}
    
    # COMPLETE_ISSUES = {
    #     'iNav': ['2022042201', '2022082602', '2021081301', '2021032601', '2020121802', '2021051401', 
    #              '2021111201', '2022090201', '2022052701', '2022080502', '2021112601', '2022070101', 
    #              '2022020401', '2022061702', '2022081201', '2022091601', '2021110501', '2021091001', 
    #              '2022092301', '2020112701', '2021070902', '2022072202', '2021061101', '2020110601', 
    #              '2022081902', '2020111302', '2020121801', '2022081202', '2022061001', '2022080501', 
    #              '2022092302', '2021102901', '2022050601', '2021062501', '2020102702', '2022070801', 
    #              '2022093001', '2021120301', '2022052001', '2022041301', '2022061701', '2022061002', 
    #              '2022030401', '2021052102', '2022031101', '2021112602', '2022032501'],
    #     'dNav': ['2021011501', '2022070102', '2022061702', '2022090201', '2021091001', '2021032601', 
    #              '2021031902', '2021062501', '2021070202', '2021061101', '2022072202', '2021100802', 
    #              '2022061001', '2020092901', '2022041301', '2020110601', '2020112701', '2021082701', 
    #              '2020121802', '2021052101', '2021070901', '2021092401', '2022032501', '2021070902', 
    #              '2022052702', '2022031101', '2021121701', '2022012801', '2020102701', '2020111302', 
    #              '2020121801', '2022081902', '2021051401', '2022030401', '2022082602', '2021112601', 
    #              '2022071502', '2021041601', '2022072201', '2022061701', '2022061002', '2022080501', 
    #              '2021101501']
    # }
    
    BATCH_1 = {
        'dNav': ['2020092901', '2020102701', '2020110601', '2020111302', '2020121801', '2020121802', 
                 '2021011501', '2021112601', '2022012801', '2022030401', '2022031101', '2022032501', 
                 '2022041301', '2022052702', '2022061001', '2022061002', '2022061701', '2022061702', 
                 '2022071502', '2022072201', '2022072202', '2022080501', '2022081902', '2022082602', 
                 '2022090201'],
        'iNav': ['2020102702', '2020111302', '2020121801', '2020121802', '2021111201', '2021112601', 
                 '2021112602', '2022020401', '2022030401', '2022031101', '2022032501', '2022041301', 
                 '2022042201', '2022050601', '2022052001', '2022052701', '2022061001', '2022061002', 
                 '2022061701', '2022061702', '2022070101', '2022070801', '2022072202', '2022080501', 
                 '2022080502', '2022081201', '2022081202', '2022081902', '2022082602', '2022090201', 
                 '2022091601', '2022092301', '2022092302', '2022093001']
    }

    GOOD_FILES = ['2022093001', '2022092301', '2022091602', '2022091601', '2022081901', '2022080502',
                  '2022071502', '2022071501', '2022070102', '2022052702', '2022051301', '2022050601',
                  '2022042901', '2022040801', '2022040101', '2022012101', '2021111901', '2021102201',
                  '2021101501', '2021100802', '2021100801', '2021100101', '2021092401', '2021091701',
                  '2021091002', '2021091001', '2021090301', '2021082701', '2021080601', '2021073001',
                  '2021070902', '2021070901', '2021070202', '2021070201', '2021062501', '2021061802',
                  '2021061101', '2021052801', '2021052102', '2021051401', '2021043001', '2021032601',
                  '2021031902', '2021031901', '2020112001']

    print(f'Checking {nav(args.x)}') 

    xnav_list = BATCH_1[nav(args.x)]
    sweep_dnav_list = KNOWN_ISSUES[nav(args.x)]

    # print folders in xnav_list but not in sweep_dnav_list 
    for f in xnav_list:
        mystr = 'YES:'
        if f not in sweep_dnav_list:
            mystr = 'NO:'

        if (args.all or args.yes) and mystr == 'YES:': 
            print(f'{mystr} {f}')
        
        if (args.all or args.no) and mystr == 'NO:':
            print(f'{mystr} {f}')

    all_folders = list(set(xnav_list + sweep_dnav_list))
    print(f'All folders in [{nav(args.x)}]:')

    # print folders in format 'f', 'f', 'f'
    print('[' + ', '.join([f'\'{f}\'' for f in all_folders]) + ']')
    # for ff in all_folders :
    #     print(ff)


if __name__ == '__main__' : 
    parser = argparse.ArgumentParser(description='Process some integers.')
    parser.add_argument('--yes', '-y', action='store_true', help='Print folders in both')
    parser.add_argument('--no', '-n', action='store_true', help='Print folders in batch1 but not in sweep')
    parser.add_argument('--all', '-a', action='store_true', help='Print all folders in batch1 and sweep')
    parser.add_argument('--x', '-x', choices=['i', 'd'], help='Choose between iNav and dNav') 

    args = parser.parse_args()
    main(args)


